syntax = "proto3";

package nakama.cluster;

option go_package = "github.com/doublemo/nakama-cluster/api";



// 微服务接口
service ApiServer{
    rpc Call(Envelope) returns(Envelope) {}
    rpc Stream(stream Envelope) returns (stream Envelope) {}
}

message Frame{
    enum Direct {
        Send = 0;
        Reply = 1;
        Broadcast = 2;
    }

    string id    = 1;
    uint64 seqID = 2;
    string node = 3;
    bytes bytes = 4;
    Direct direct = 5;
}

message Envelope  {
    Message.MsgID cid = 1;
    oneof payload {
        bytes bytes  = 2;
        Error error  = 3;
    }
    map<string, string> vars = 4;
}

// error
message Error {
    // The error code which should be one of "Error.Code" enums.
    int32 code = 1;
    // A message in English to help developers debug the response.
    string message = 2;
    // Additional error details which may be different for each response.
    map<string, string> context = 3;
}

message Message {
    enum MsgID {
        ZERO = 0;
        SESSIONSTART = 1;
        SESSIONEND = 2;
    }

    message SessionStart {
        string sessionID = 1;
        string userID = 2;
        string username = 3;
        string clientIP = 4;
        string clientPort = 5;
        int32 format = 6;
        string status = 7;
        string lang = 8;
        int64 expiry = 9;
        map<string, string> vars = 10;
    }
    
    message SessionEnd {
        string sessionID = 1;
        string userID = 2;
        string msg = 3;
        int32  reason = 4;
    }
}