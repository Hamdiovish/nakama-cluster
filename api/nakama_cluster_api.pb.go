// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: nakama_cluster_api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frame_Direct int32

const (
	Frame_Send      Frame_Direct = 0
	Frame_Reply     Frame_Direct = 1
	Frame_Broadcast Frame_Direct = 2
)

// Enum value maps for Frame_Direct.
var (
	Frame_Direct_name = map[int32]string{
		0: "Send",
		1: "Reply",
		2: "Broadcast",
	}
	Frame_Direct_value = map[string]int32{
		"Send":      0,
		"Reply":     1,
		"Broadcast": 2,
	}
)

func (x Frame_Direct) Enum() *Frame_Direct {
	p := new(Frame_Direct)
	*p = x
	return p
}

func (x Frame_Direct) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frame_Direct) Descriptor() protoreflect.EnumDescriptor {
	return file_nakama_cluster_api_proto_enumTypes[0].Descriptor()
}

func (Frame_Direct) Type() protoreflect.EnumType {
	return &file_nakama_cluster_api_proto_enumTypes[0]
}

func (x Frame_Direct) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frame_Direct.Descriptor instead.
func (Frame_Direct) EnumDescriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{0, 0}
}

type Message_MsgID int32

const (
	Message_ZERO         Message_MsgID = 0
	Message_SESSIONSTART Message_MsgID = 1
	Message_SESSIONEND   Message_MsgID = 2
)

// Enum value maps for Message_MsgID.
var (
	Message_MsgID_name = map[int32]string{
		0: "ZERO",
		1: "SESSIONSTART",
		2: "SESSIONEND",
	}
	Message_MsgID_value = map[string]int32{
		"ZERO":         0,
		"SESSIONSTART": 1,
		"SESSIONEND":   2,
	}
)

func (x Message_MsgID) Enum() *Message_MsgID {
	p := new(Message_MsgID)
	*p = x
	return p
}

func (x Message_MsgID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_MsgID) Descriptor() protoreflect.EnumDescriptor {
	return file_nakama_cluster_api_proto_enumTypes[1].Descriptor()
}

func (Message_MsgID) Type() protoreflect.EnumType {
	return &file_nakama_cluster_api_proto_enumTypes[1]
}

func (x Message_MsgID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_MsgID.Descriptor instead.
func (Message_MsgID) EnumDescriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{3, 0}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SeqID  uint64       `protobuf:"varint,2,opt,name=seqID,proto3" json:"seqID,omitempty"`
	Node   string       `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	Bytes  []byte       `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Direct Frame_Direct `protobuf:"varint,5,opt,name=direct,proto3,enum=nakama.cluster.Frame_Direct" json:"direct,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Frame) GetSeqID() uint64 {
	if x != nil {
		return x.SeqID
	}
	return 0
}

func (x *Frame) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *Frame) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Frame) GetDirect() Frame_Direct {
	if x != nil {
		return x.Direct
	}
	return Frame_Send
}

type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid Message_MsgID `protobuf:"varint,1,opt,name=cid,proto3,enum=nakama.cluster.Message_MsgID" json:"cid,omitempty"`
	// Types that are assignable to Payload:
	//	*Envelope_Bytes
	//	*Envelope_Error
	Payload isEnvelope_Payload `protobuf_oneof:"payload"`
	Vars    map[string]string  `protobuf:"bytes,4,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{1}
}

func (x *Envelope) GetCid() Message_MsgID {
	if x != nil {
		return x.Cid
	}
	return Message_ZERO
}

func (m *Envelope) GetPayload() isEnvelope_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Envelope) GetBytes() []byte {
	if x, ok := x.GetPayload().(*Envelope_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *Envelope) GetError() *Error {
	if x, ok := x.GetPayload().(*Envelope_Error); ok {
		return x.Error
	}
	return nil
}

func (x *Envelope) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

type isEnvelope_Payload interface {
	isEnvelope_Payload()
}

type Envelope_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

type Envelope_Error struct {
	Error *Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*Envelope_Bytes) isEnvelope_Payload() {}

func (*Envelope_Error) isEnvelope_Payload() {}

// error
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error code which should be one of "Error.Code" enums.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// A message in English to help developers debug the response.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional error details which may be different for each response.
	Context map[string]string `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{3}
}

type Message_SessionStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID  string            `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	UserID     string            `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Username   string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ClientIP   string            `protobuf:"bytes,4,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
	ClientPort string            `protobuf:"bytes,5,opt,name=clientPort,proto3" json:"clientPort,omitempty"`
	Format     int32             `protobuf:"varint,6,opt,name=format,proto3" json:"format,omitempty"`
	Status     string            `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Lang       string            `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	Expiry     int64             `protobuf:"varint,9,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Vars       map[string]string `protobuf:"bytes,10,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Message_SessionStart) Reset() {
	*x = Message_SessionStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionStart) ProtoMessage() {}

func (x *Message_SessionStart) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionStart.ProtoReflect.Descriptor instead.
func (*Message_SessionStart) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Message_SessionStart) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Message_SessionStart) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Message_SessionStart) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Message_SessionStart) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

func (x *Message_SessionStart) GetClientPort() string {
	if x != nil {
		return x.ClientPort
	}
	return ""
}

func (x *Message_SessionStart) GetFormat() int32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *Message_SessionStart) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Message_SessionStart) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Message_SessionStart) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *Message_SessionStart) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

type Message_SessionEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	UserID    string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Reason    int32  `protobuf:"varint,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Message_SessionEnd) Reset() {
	*x = Message_SessionEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nakama_cluster_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionEnd) ProtoMessage() {}

func (x *Message_SessionEnd) ProtoReflect() protoreflect.Message {
	mi := &file_nakama_cluster_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionEnd.ProtoReflect.Descriptor instead.
func (*Message_SessionEnd) Descriptor() ([]byte, []int) {
	return file_nakama_cluster_api_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Message_SessionEnd) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Message_SessionEnd) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Message_SessionEnd) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Message_SessionEnd) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

var File_nakama_cluster_api_proto protoreflect.FileDescriptor

var file_nakama_cluster_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6e, 0x61, 0x6b, 0x61,
	0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0xbb, 0x01, 0x0a, 0x05, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x2c, 0x0a, 0x06, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0x02, 0x22, 0xfe, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x49,
	0x44, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x61,
	0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a,
	0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa4, 0x04, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xf5, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x12, 0x42, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x6c, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x33, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x4e, 0x44,
	0x10, 0x02, 0x32, 0x8d, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x1a, 0x18, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d,
	0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x1a, 0x18, 0x2e, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x6d, 0x6f, 0x2f, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61,
	0x2d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nakama_cluster_api_proto_rawDescOnce sync.Once
	file_nakama_cluster_api_proto_rawDescData = file_nakama_cluster_api_proto_rawDesc
)

func file_nakama_cluster_api_proto_rawDescGZIP() []byte {
	file_nakama_cluster_api_proto_rawDescOnce.Do(func() {
		file_nakama_cluster_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_nakama_cluster_api_proto_rawDescData)
	})
	return file_nakama_cluster_api_proto_rawDescData
}

var file_nakama_cluster_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nakama_cluster_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_nakama_cluster_api_proto_goTypes = []interface{}{
	(Frame_Direct)(0),            // 0: nakama.cluster.Frame.Direct
	(Message_MsgID)(0),           // 1: nakama.cluster.Message.MsgID
	(*Frame)(nil),                // 2: nakama.cluster.Frame
	(*Envelope)(nil),             // 3: nakama.cluster.Envelope
	(*Error)(nil),                // 4: nakama.cluster.Error
	(*Message)(nil),              // 5: nakama.cluster.Message
	nil,                          // 6: nakama.cluster.Envelope.VarsEntry
	nil,                          // 7: nakama.cluster.Error.ContextEntry
	(*Message_SessionStart)(nil), // 8: nakama.cluster.Message.SessionStart
	(*Message_SessionEnd)(nil),   // 9: nakama.cluster.Message.SessionEnd
	nil,                          // 10: nakama.cluster.Message.SessionStart.VarsEntry
}
var file_nakama_cluster_api_proto_depIdxs = []int32{
	0,  // 0: nakama.cluster.Frame.direct:type_name -> nakama.cluster.Frame.Direct
	1,  // 1: nakama.cluster.Envelope.cid:type_name -> nakama.cluster.Message.MsgID
	4,  // 2: nakama.cluster.Envelope.error:type_name -> nakama.cluster.Error
	6,  // 3: nakama.cluster.Envelope.vars:type_name -> nakama.cluster.Envelope.VarsEntry
	7,  // 4: nakama.cluster.Error.context:type_name -> nakama.cluster.Error.ContextEntry
	10, // 5: nakama.cluster.Message.SessionStart.vars:type_name -> nakama.cluster.Message.SessionStart.VarsEntry
	3,  // 6: nakama.cluster.ApiServer.Call:input_type -> nakama.cluster.Envelope
	3,  // 7: nakama.cluster.ApiServer.Stream:input_type -> nakama.cluster.Envelope
	3,  // 8: nakama.cluster.ApiServer.Call:output_type -> nakama.cluster.Envelope
	3,  // 9: nakama.cluster.ApiServer.Stream:output_type -> nakama.cluster.Envelope
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_nakama_cluster_api_proto_init() }
func file_nakama_cluster_api_proto_init() {
	if File_nakama_cluster_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nakama_cluster_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nakama_cluster_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nakama_cluster_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nakama_cluster_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nakama_cluster_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nakama_cluster_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nakama_cluster_api_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Envelope_Bytes)(nil),
		(*Envelope_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nakama_cluster_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nakama_cluster_api_proto_goTypes,
		DependencyIndexes: file_nakama_cluster_api_proto_depIdxs,
		EnumInfos:         file_nakama_cluster_api_proto_enumTypes,
		MessageInfos:      file_nakama_cluster_api_proto_msgTypes,
	}.Build()
	File_nakama_cluster_api_proto = out.File
	file_nakama_cluster_api_proto_rawDesc = nil
	file_nakama_cluster_api_proto_goTypes = nil
	file_nakama_cluster_api_proto_depIdxs = nil
}
